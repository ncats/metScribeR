% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storage_object_functions.R
\name{add_adduct_peak_presence}
\alias{add_adduct_peak_presence}
\title{add_adduct_peak_presence}
\usage{
add_adduct_peak_presence(
  storage_object,
  rt_tolerance,
  apex_intensity_ratio_tolerance = 0.5
)
}
\arguments{
\item{storage_object}{a metScribeR storage_object}

\item{rt_tolerance}{the rt_tolerance for a feature to be considered a good peak.}

\item{apex_intensity_ratio_tolerance}{the intensity tolerance for a peak outside the RT tolerance to be considered multi-modal}
}
\value{
an updated metScribeR storage_object
}
\description{
Add is_good_peak label to peak_df. Add has_good_peak and rt_value to adduct_df.
}
\details{
The is_good_peak label requires a feature to both pass manual filtering and be within
the rt_tolerance of the primary feature for an adduct selected by update_best_peak_and_adduct. The reason this must
happen after already choosing a best feature is so that the rt of the standard is established.

The has_good_peak label requires an adduct to have a feature that received the is_good_peak label. An RT_value is
then associated with that adduct. The same rt will be applied to all adducts of a standard. A multimodality filter is also included,
where if there are two peaks in a standard at different RTs with comparable intensity the standard is filtered out.
}
